---
title: "Class 10 Structural Bioinformatics Pt1"
author: "Jesus (A17597539)"
format: pdf
---

# the PDB database    

First let's see what is in the PDB database- the main repository of protein structures

PDB contains contains only 183,201

```{r}
stats <- read.csv( "PDBstats.csv", row.names=1)

stats

```


There is a problem here due to the commas in the numbers. This causes R to treat them as characters

```{r}
x <- stats$X.ray
x
```

```{r}
as.numeric( gsub(",", "", x) )
```

```{r}
rm.comma <- function(x){
  as.numeric( gsub(",", "", x) )
}
```

```{r}
rm.comma(stats$EM)
```

I can use `apply()` to fix the whole table...
```{r}
pdbstats <- apply(stats, 2 , rm.comma)
rownames(pdbstats) <- row.names(stats)
head(pdbstats)
```


>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
totals <- apply(pdbstats, 2, sum)

round(totals/totals["Total"]*100, 2)
```
x-ray = 84.83%
EM = 8.33%

>Q2: What proportion of structures in the PDB are protein?

```{r}
round(pdbstats[1, "Total"]/ sum(pdbstats[, "Total"]) *100)

```
87% of the structures in the PDB are protein

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?


SKIPPED


>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We can not see water in the structure because water is smaller than the resolution of 2 Angstroms. We would need the resolution to be 1 Angstrom or better to see hydrogen

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have


Water 308

>Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

Here is a lovely figure of the HIP-Pr with the catalytic ASp residues, the MK1 compund and the all important water 308

![](1HSG.png)


>Discussion Topic: Can you think of a way in which indinavir, or even larger ligands and substrates, could enter the binding site?

Larger ligands and substrates could enter the binding site by changing their orientation and perhaps rearranging hydrogen bonds on the chains so it can fit

## The bio3d package for structural bioinofrmatics

```{r}
library(bio3d)

pdb <- read.pdb("1hsg")

pdb
```

```{r}
head(pdb$atom)
```

#Predicting functional motions of a single structure

Let's finish today with a bioinformatics calculation to predict the functional motions of a PDB structure

```{r}
adk <- read.pdb("6s36")

m <- nma(adk)
```

```{r}
plot(m)

mktrj(m, file="adk_m7.pdb")

```


We need some packages for today's class. These include `bio3d` and `msa`

The `msa` package id from the BioConductor. These packages focus on the genomics type work and are managaed by the `BiocManager` package.

Install `install.packages("BiocManager")` and then `BiocManager::install("msa")` all entered in the R "brain" console


```{r}
library(bio3d)

aa <- get.seq("1ake_A")

aa
```

Now I can search the PDB database for related sequences:
```{r}
b <- blast.pdb(aa)
```

```{r}
hits <- plot(b)
```

```{r}
attributes(b)

head(b$hit.tbl)
```

These are the related structures in the PDB database that we found via a BLAST search...
```{r}
hits$pdb.id
```

Side-note: Lets annotate these structures (in other words find out what they are, what species they are from, stuff about the experiment they were solved in etc.)


For this we can use the `pdb.annotate()`
```{r}
anno <- pdb.annotate(hits$pdb.id)
```

```{r}
#attributes(anno)

head(anno)
```

Now we can download all these structures for further analysis with the `get.pdb()` function

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Now we have all these related structures we can align and Superpose...

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")

pdbs
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
plot(pdbs, labels=ids)
```


##Principal Component Analysis

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

And a nicer PC plot
```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

